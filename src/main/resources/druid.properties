
spring.datasource.driverClassName=com.mysql.jdbc.Driver

spring.datasource.username=root
spring.datasource.password=Pissoff101
spring.datasource.url=jdbc:MySql://47.94.106.110:3306/ggd?characterEncoding=UTF-8

#初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=10

#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000

# 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
# 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle = true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.testOnReturn=false

##是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭
spring.datasource.poolPreparedStatements=false 
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,log4j
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.maxOpenPreparedStatements = 20

#物理连接初始化的时候执行的sql
spring.datasource.connectionInitSqls=SELECT 1 FROM DUAL


spring.datasource.logSlowSql=true


